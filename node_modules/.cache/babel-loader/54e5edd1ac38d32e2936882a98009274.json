{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erko\\\\Desktop\\\\grocery\\\\grocery\\\\grocery\\\\grocery\\\\src\\\\components\\\\Toggler\\\\Toggler.js\";\nimport React from \"react\";\nimport \"./Toggler.css\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nfunction Toggler({\n  toggle,\n  dateItems,\n  addbackToShowList,\n  deleteSaveIndex\n}) {\n  return /*#__PURE__*/React.createElement(Collapse, {\n    in: toggle,\n    timeout: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, dateItems.map((key, index) => {\n    return /*#__PURE__*/React.createElement(Accordion, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 27\n        }\n      }),\n      style: {\n        backgroundColor: \"#4caf50\",\n        boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      m: 1,\n      spacing: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      align: \"left\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }, key.date)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"right\",\n      style: {\n        color: \"white\"\n      },\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }, key.name)))), key.items.map((zac, index) => {\n      return /*#__PURE__*/React.createElement(AccordionDetails, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, zac.text);\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => addbackToShowList(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Use\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteSaveIndex(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Clear index\")));\n  }));\n}\n\nexport default Toggler;","map":{"version":3,"sources":["C:/Users/Erko/Desktop/grocery/grocery/grocery/grocery/src/components/Toggler/Toggler.js"],"names":["React","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","Grid","Collapse","Toggler","toggle","dateItems","addbackToShowList","deleteSaveIndex","map","key","index","backgroundColor","boxShadow","color","date","name","items","zac","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA,iBAArB;AAAwCC,EAAAA;AAAxC,CAAjB,EAA4E;AAC1E,sBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEH,MAAd;AAAsB,IAAA,OAAO,EAAE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,CAACG,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,wBACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,UAAU,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADd;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,SADZ;AAELC,QAAAA,SAAS,EACP;AAHG,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,CAAC,EAAE,CAAnB;AAAsB,MAAA,OAAO,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGJ,GAAG,CAACK,IALP,CADF,CADF,eAUE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,OAAO,EAAC,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGJ,GAAG,CAACM,IALP,CADF,CAVF,CARF,CADF,EA8BGN,GAAG,CAACO,KAAJ,CAAUR,GAAV,CAAc,CAACS,GAAD,EAAMP,KAAN,KAAgB;AAC7B,0BACE,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BO,GAAG,CAACC,IAAnC,CADF;AAGD,KAJA,CA9BH,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,MAAMZ,iBAAiB,CAACI,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMH,eAAe,CAACG,KAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAnCF,CADF;AA4CD,GA7CA,CADH,CADF;AAkDD;;AAED,eAAeP,OAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Toggler.css\";\r\n\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nfunction Toggler({ toggle, dateItems, addbackToShowList, deleteSaveIndex }) {\r\n  return (\r\n    <Collapse in={toggle} timeout={1000}>\r\n      {dateItems.map((key, index) => {\r\n        return (\r\n          <Accordion key={index}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              style={{\r\n                backgroundColor: \"#4caf50\",\r\n                boxShadow:\r\n                  \"0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)\",\r\n              }}\r\n            >\r\n              <Grid container m={1} spacing={5}>\r\n                <Grid item xs={3}>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    align=\"left\"\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    {key.date}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography\r\n                    align=\"right\"\r\n                    style={{ color: \"white\" }}\r\n                    variant=\"h6\"\r\n                  >\r\n                    {key.name}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            {key.items.map((zac, index) => {\r\n              return (\r\n                <AccordionDetails key={index}>{zac.text}</AccordionDetails>\r\n              );\r\n            })}\r\n            <div>\r\n              <button onClick={() => addbackToShowList(index)}>Use</button>\r\n              <button onClick={() => deleteSaveIndex(index)}>\r\n                Clear index\r\n              </button>\r\n            </div>\r\n          </Accordion>\r\n        );\r\n      })}\r\n    </Collapse>\r\n  );\r\n}\r\n\r\nexport default Toggler;\r\n"]},"metadata":{},"sourceType":"module"}