{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erko\\\\Desktop\\\\grocery\\\\grocery\\\\src\\\\components\\\\ShowList\\\\ShowList.js\";\nimport React from \"react\";\nimport \"./ShowList.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nfunction ShowList({\n  groceries,\n  deleteItem,\n  complete,\n  changeItem,\n  changeSmallText,\n  thisisCancel,\n  submitSmallText\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ShowList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"This is Showing list\"), groceries.map((grocy, index) => {\n    if (grocy.editMode) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"theItems editMode\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"smallInput\",\n        type: \"text\",\n        value: grocy.value,\n        onChange: e => changeSmallText(e.target.value, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"fa fa-times-circle\",\n        onClick: () => thisisCancel(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"fa fa-check-circle-o\",\n        onClick: () => submitSmallText(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"theItems\",\n        value: grocy.text,\n        key: index,\n        style: {\n          color: grocy.completed ? \"red\" : \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        onDoubleClick: () => changeItem(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, \" \", grocy.text), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"fa fa-trash\",\n        onClick: () => deleteItem(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => complete(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, \"Complete\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => changeItem(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"edit\")));\n    }\n  }));\n}\n\nexport default ShowList;","map":{"version":3,"sources":["C:/Users/Erko/Desktop/grocery/grocery/src/components/ShowList/ShowList.js"],"names":["React","ShowList","groceries","deleteItem","complete","changeItem","changeSmallText","thisisCancel","submitSmallText","map","grocy","index","editMode","value","e","target","text","color","completed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAO,uCAAP;;AAEA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,SADgB;AAEhBC,EAAAA,UAFgB;AAGhBC,EAAAA,QAHgB;AAIhBC,EAAAA,UAJgB;AAKhBC,EAAAA,eALgB;AAMhBC,EAAAA,YANgB;AAOhBC,EAAAA;AAPgB,CAAlB,EAQG;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAGGN,SAAS,CAACO,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/B,QAAID,KAAK,CAACE,QAAV,EAAoB;AAClB,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAED,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAED,KAAK,CAACG,KAHf;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAOR,eAAe,CAACQ,CAAC,CAACC,MAAF,CAASF,KAAV,EAAiBF,KAAjB,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAOE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAE,MAAMJ,YAAY,CAACI,KAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAWE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,OAAO,EAAE,MAAMH,eAAe,CAACG,KAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAkBD,KAnBD,MAmBO;AACL,0BACE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,KAAK,EAAED,KAAK,CAACM,IAFf;AAGE,QAAA,GAAG,EAAEL,KAHP;AAIE,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAEP,KAAK,CAACQ,SAAN,GAAkB,KAAlB,GAA0B;AAAnC,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAG,QAAA,aAAa,EAAE,MAAMb,UAAU,CAACM,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA6CD,KAAK,CAACM,IAAnD,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAE,MAAMb,UAAU,CAACQ,KAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMP,QAAQ,CAACO,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAQ,QAAA,OAAO,EAAE,MAAMN,UAAU,CAACM,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CAPF,CADF;AAoBD;AACF,GA1CA,CAHH,CADF;AAiDD;;AAED,eAAeV,QAAf","sourcesContent":["import React from \"react\";\r\nimport \"./ShowList.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nfunction ShowList({\r\n  groceries,\r\n  deleteItem,\r\n  complete,\r\n  changeItem,\r\n  changeSmallText,\r\n  thisisCancel,\r\n  submitSmallText,\r\n}) {\r\n  return (\r\n    <div className=\"ShowList\">\r\n      <h1>This is Showing list</h1>\r\n\r\n      {groceries.map((grocy, index) => {\r\n        if (grocy.editMode) {\r\n          return (\r\n            <div className=\"theItems editMode\" key={index}>\r\n              <input\r\n                className=\"smallInput\"\r\n                type=\"text\"\r\n                value={grocy.value}\r\n                onChange={(e) => changeSmallText(e.target.value, index)}\r\n              />\r\n              <button\r\n                className=\"fa fa-times-circle\"\r\n                onClick={() => thisisCancel(index)}\r\n              ></button>\r\n              <button\r\n                className=\"fa fa-check-circle-o\"\r\n                onClick={() => submitSmallText(index)}\r\n              ></button>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div\r\n              className=\"theItems\"\r\n              value={grocy.text}\r\n              key={index}\r\n              style={{ color: grocy.completed ? \"red\" : \"green\" }}\r\n            >\r\n              <p onDoubleClick={() => changeItem(index)}> {grocy.text}</p>\r\n              <div>\r\n                <button\r\n                  className=\"fa fa-trash\"\r\n                  onClick={() => deleteItem(index)}\r\n                >\r\n                  X\r\n                </button>\r\n                <button onClick={() => complete(index)}>Complete</button>\r\n                <button onClick={() => changeItem(index)}>edit</button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowList;\r\n"]},"metadata":{},"sourceType":"module"}