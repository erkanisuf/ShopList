{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erko\\\\Desktop\\\\grocery\\\\src\\\\components\\\\Grocery.js\";\nimport React from \"react\";\nimport AddGrocery from \"./AddGrocery/AddGrocery\";\nimport ShowList from \"./ShowList/ShowList\";\nimport { useState } from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport Toggler from \"../components/Toggler/Toggler\";\nimport SaveList from \"./Toggler/SaveList/SaveList\";\n\nfunction Grocery() {\n  const [groceryList, setGroceryList] = useState([{\n    text: \"kur\",\n    completed: true,\n    editMode: false,\n    value: \"kur\",\n    title: \"gar\"\n  }, {\n    text: \"putka\",\n    completed: true,\n    editMode: false,\n    value: \"putka\",\n    title: \"hahha.\"\n  }, {\n    text: \"mandarina\",\n    completed: false,\n    editMode: true,\n    value: \"mandarina\",\n    title: \"gege.\"\n  }]);\n  const [value, setValue] = useState({\n    text: \"\",\n    title: \"banana\"\n  });\n  console.log(groceries);\n  const [thefullDate, setfullDate] = useState([{\n    name: \"putka\",\n    date: 1,\n    items: groceryList\n  }]);\n  const [saverValue, setsaverValue] = useState(\"\");\n  const [toggle, setToggle] = useState(false);\n  const [savesmallText, setsavesmallText] = useState({\n    text: \"\",\n    transition: false\n  });\n\n  const handleSelect = e => {\n    const items = {\n      text: value.text,\n      title: e\n    };\n    setValue(items);\n    console.log(items);\n  };\n\n  const handleInput = e => {\n    const items = {\n      text: e,\n      title: value.title\n    };\n    setValue(items);\n    console.log(items);\n  };\n\n  const changeSmallSelect = (e, index) => {\n    const changeItemer = [...groceryList];\n    changeItemer[index].titleValue = e;\n    setGroceryList(changeItemer);\n    console.log(changeItemer[index]);\n  };\n\n  const addAll = e => {\n    e.preventDefault();\n    if (!value.text) return alert(\"Please Fill the field!\");\n    const items = [...groceryList, {\n      text: value.text,\n      completed: false,\n      editMode: false,\n      value: value.text,\n      title: value.title,\n      titleValue: value.title\n    }];\n    setGroceryList(items);\n    setValue({\n      text: \"\",\n      title: \"Banana\"\n    });\n    console.log(items);\n  };\n\n  const deleteItem = index => {\n    const deleter = [...groceryList];\n    deleter.splice(index, 1);\n    setGroceryList(deleter);\n  };\n\n  const complete = index => {\n    const completer = [...groceryList];\n    completer[index].completed = !completer[index].completed;\n    setGroceryList(completer);\n  };\n\n  const changeItem = index => {\n    const changeItemer = [...groceryList];\n    changeItemer[index].editMode = !changeItemer[index].editMode;\n    setGroceryList(changeItemer);\n  };\n\n  const changeSmallText = (e, index) => {\n    const changeItemer = [...groceryList];\n    changeItemer[index].value = e;\n    setGroceryList(changeItemer);\n  };\n\n  const thisisCancel = index => {\n    const changeItemer = [...groceryList];\n    changeItemer[index].editMode = !changeItemer[index].editMode;\n    changeItemer[index].value = changeItemer[index].text;\n    changeItemer[index].titleValue = changeItemer[index].title;\n    setGroceryList(changeItemer);\n  };\n\n  const submitSmallText = index => {\n    const changeItemer = [...groceryList];\n    if (!changeItemer[index].value) return alert(\"Please Fill the field!\");\n    changeItemer[index].text = changeItemer[index].value;\n    changeItemer[index].title = changeItemer[index].titleValue;\n    changeItemer[index].editMode = !changeItemer[index].editMode;\n    setGroceryList(changeItemer);\n  };\n\n  const saveUpShit = () => {\n    if (!groceryList.length) return alert(\"Please Add Some Items\");\n    if (saverValue === \"\") return alert(\"Please Write name\");\n    let date = new Date();\n    const dates = [...thefullDate, {\n      name: saverValue,\n      date: date.toDateString(),\n      items: groceryList\n    }];\n    setfullDate(dates);\n    setsaverValue(\"\");\n    setsavesmallText({\n      text: \"succsesfully saved!\",\n      transition: true\n    });\n    setInterval(function backUp() {\n      setsavesmallText({\n        text: \"\",\n        transition: false\n      });\n    }, 3000);\n  };\n\n  const addbackToShowList = index => {\n    const completer = [...thefullDate];\n    setGroceryList(completer[index].items);\n  };\n\n  const deleteSaveIndex = index => {\n    const completer = [...thefullDate];\n    completer.splice(index, 1);\n    setfullDate(completer);\n  };\n\n  const checkAll = () => {\n    const items = [...groceryList];\n\n    for (let i = 0; i < items.length; i++) {\n      items[i].completed = true;\n    }\n\n    setGroceryList(items);\n  };\n\n  const uncheckAll = () => {\n    const items = [...groceryList];\n\n    for (let i = 0; i < items.length; i++) {\n      items[i].completed = false;\n    }\n\n    setGroceryList(items);\n  };\n\n  const clearAll = () => {\n    setGroceryList([]);\n  };\n\n  const clearAllhistory = () => {\n    setfullDate([]);\n  };\n\n  const togglerClick = () => {\n    setToggle(!toggle);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    numberItems: thefullDate.length,\n    togglerClick: togglerClick,\n    toggler: toggle,\n    togglera: /*#__PURE__*/React.createElement(Toggler, {\n      toggle: toggle,\n      dateItems: thefullDate,\n      addbackToShowList: addbackToShowList,\n      deleteSaveIndex: deleteSaveIndex,\n      thefullDate: thefullDate,\n      clearAllhistory: clearAllhistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddGrocery, {\n    value: value.text,\n    handleInput: handleInput,\n    addItem: addAll,\n    handleSelect: handleSelect,\n    title: value.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShowList, {\n    groceries: groceryList,\n    deleteItem: deleteItem,\n    complete: complete,\n    changeItem: changeItem,\n    changeSmallText: changeSmallText,\n    thisisCancel: thisisCancel,\n    submitSmallText: submitSmallText,\n    changeSmallSelect: changeSmallSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SaveList, {\n    saverValue: saverValue,\n    setsaverValue: setsaverValue,\n    saveUpShit: saveUpShit,\n    checkAll: checkAll,\n    uncheckAll: uncheckAll,\n    clearAll: clearAll,\n    savesmallText: savesmallText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Grocery;","map":{"version":3,"sources":["C:/Users/Erko/Desktop/grocery/src/components/Grocery.js"],"names":["React","AddGrocery","ShowList","useState","Layout","Toggler","SaveList","Grocery","groceryList","setGroceryList","text","completed","editMode","value","title","setValue","console","log","groceries","thefullDate","setfullDate","name","date","items","saverValue","setsaverValue","toggle","setToggle","savesmallText","setsavesmallText","transition","handleSelect","e","handleInput","changeSmallSelect","index","changeItemer","titleValue","addAll","preventDefault","alert","deleteItem","deleter","splice","complete","completer","changeItem","changeSmallText","thisisCancel","submitSmallText","saveUpShit","length","Date","dates","toDateString","setInterval","backUp","addbackToShowList","deleteSaveIndex","checkAll","i","uncheckAll","clearAll","clearAllhistory","togglerClick"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AddGrocery from \"./AddGrocery/AddGrocery\";\r\nimport ShowList from \"./ShowList/ShowList\";\r\nimport { useState } from \"react\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport Toggler from \"../components/Toggler/Toggler\";\r\nimport SaveList from \"./Toggler/SaveList/SaveList\";\r\n\r\nfunction Grocery() {\r\n  const [groceryList, setGroceryList] = useState([\r\n    {\r\n      text: \"kur\",\r\n      completed: true,\r\n      editMode: false,\r\n      value: \"kur\",\r\n      title: \"gar\",\r\n    },\r\n    {\r\n      text: \"putka\",\r\n      completed: true,\r\n      editMode: false,\r\n      value: \"putka\",\r\n      title: \"hahha.\",\r\n    },\r\n    {\r\n      text: \"mandarina\",\r\n      completed: false,\r\n      editMode: true,\r\n      value: \"mandarina\",\r\n      title: \"gege.\",\r\n    },\r\n  ]);\r\n  const [value, setValue] = useState({ text: \"\", title: \"banana\" });\r\n  console.log(groceries);\r\n  const [thefullDate, setfullDate] = useState([\r\n    {\r\n      name: \"putka\",\r\n      date: 1,\r\n      items: groceryList,\r\n    },\r\n  ]);\r\n  const [saverValue, setsaverValue] = useState(\"\");\r\n  const [toggle, setToggle] = useState(false);\r\n  const [savesmallText, setsavesmallText] = useState({\r\n    text: \"\",\r\n    transition: false,\r\n  });\r\n\r\n  const handleSelect = (e) => {\r\n    const items = {\r\n      text: value.text,\r\n      title: e,\r\n    };\r\n\r\n    setValue(items);\r\n    console.log(items);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const items = {\r\n      text: e,\r\n      title: value.title,\r\n    };\r\n\r\n    setValue(items);\r\n    console.log(items);\r\n  };\r\n\r\n  const changeSmallSelect = (e, index) => {\r\n    const changeItemer = [...groceryList];\r\n    changeItemer[index].titleValue = e;\r\n\r\n    setGroceryList(changeItemer);\r\n    console.log(changeItemer[index]);\r\n  };\r\n\r\n  const addAll = (e) => {\r\n    e.preventDefault();\r\n    if (!value.text) return alert(\"Please Fill the field!\");\r\n\r\n    const items = [\r\n      ...groceryList,\r\n      {\r\n        text: value.text,\r\n        completed: false,\r\n        editMode: false,\r\n        value: value.text,\r\n        title: value.title,\r\n        titleValue: value.title,\r\n      },\r\n    ];\r\n    setGroceryList(items);\r\n    setValue({ text: \"\", title: \"Banana\" });\r\n    console.log(items);\r\n  };\r\n\r\n  const deleteItem = (index) => {\r\n    const deleter = [...groceryList];\r\n    deleter.splice(index, 1);\r\n    setGroceryList(deleter);\r\n  };\r\n\r\n  const complete = (index) => {\r\n    const completer = [...groceryList];\r\n    completer[index].completed = !completer[index].completed;\r\n\r\n    setGroceryList(completer);\r\n  };\r\n\r\n  const changeItem = (index) => {\r\n    const changeItemer = [...groceryList];\r\n    changeItemer[index].editMode = !changeItemer[index].editMode;\r\n    setGroceryList(changeItemer);\r\n  };\r\n\r\n  const changeSmallText = (e, index) => {\r\n    const changeItemer = [...groceryList];\r\n    changeItemer[index].value = e;\r\n    setGroceryList(changeItemer);\r\n  };\r\n\r\n  const thisisCancel = (index) => {\r\n    const changeItemer = [...groceryList];\r\n    changeItemer[index].editMode = !changeItemer[index].editMode;\r\n    changeItemer[index].value = changeItemer[index].text;\r\n    changeItemer[index].titleValue = changeItemer[index].title;\r\n    setGroceryList(changeItemer);\r\n  };\r\n\r\n  const submitSmallText = (index) => {\r\n    const changeItemer = [...groceryList];\r\n    if (!changeItemer[index].value) return alert(\"Please Fill the field!\");\r\n    changeItemer[index].text = changeItemer[index].value;\r\n    changeItemer[index].title = changeItemer[index].titleValue;\r\n\r\n    changeItemer[index].editMode = !changeItemer[index].editMode;\r\n    setGroceryList(changeItemer);\r\n  };\r\n\r\n  const saveUpShit = () => {\r\n    if (!groceryList.length) return alert(\"Please Add Some Items\");\r\n    if (saverValue === \"\") return alert(\"Please Write name\");\r\n    let date = new Date();\r\n    const dates = [\r\n      ...thefullDate,\r\n      { name: saverValue, date: date.toDateString(), items: groceryList },\r\n    ];\r\n    setfullDate(dates);\r\n\r\n    setsaverValue(\"\");\r\n\r\n    setsavesmallText({\r\n      text: \"succsesfully saved!\",\r\n      transition: true,\r\n    });\r\n\r\n    setInterval(\r\n      function backUp() {\r\n        setsavesmallText({\r\n          text: \"\",\r\n          transition: false,\r\n        });\r\n      },\r\n\r\n      3000\r\n    );\r\n  };\r\n\r\n  const addbackToShowList = (index) => {\r\n    const completer = [...thefullDate];\r\n\r\n    setGroceryList(completer[index].items);\r\n  };\r\n\r\n  const deleteSaveIndex = (index) => {\r\n    const completer = [...thefullDate];\r\n    completer.splice(index, 1);\r\n    setfullDate(completer);\r\n  };\r\n\r\n  const checkAll = () => {\r\n    const items = [...groceryList];\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      items[i].completed = true;\r\n    }\r\n    setGroceryList(items);\r\n  };\r\n\r\n  const uncheckAll = () => {\r\n    const items = [...groceryList];\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      items[i].completed = false;\r\n    }\r\n    setGroceryList(items);\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setGroceryList([]);\r\n  };\r\n\r\n  const clearAllhistory = () => {\r\n    setfullDate([]);\r\n  };\r\n\r\n  const togglerClick = () => {\r\n    setToggle(!toggle);\r\n  };\r\n  return (\r\n    <Layout\r\n      numberItems={thefullDate.length}\r\n      togglerClick={togglerClick}\r\n      toggler={toggle}\r\n      togglera={\r\n        <Toggler\r\n          toggle={toggle}\r\n          dateItems={thefullDate}\r\n          addbackToShowList={addbackToShowList}\r\n          deleteSaveIndex={deleteSaveIndex}\r\n          thefullDate={thefullDate}\r\n          clearAllhistory={clearAllhistory}\r\n        />\r\n      }\r\n    >\r\n      <AddGrocery\r\n        value={value.text}\r\n        handleInput={handleInput}\r\n        addItem={addAll}\r\n        handleSelect={handleSelect}\r\n        title={value.title}\r\n      />\r\n\r\n      <ShowList\r\n        groceries={groceryList}\r\n        deleteItem={deleteItem}\r\n        complete={complete}\r\n        changeItem={changeItem}\r\n        changeSmallText={changeSmallText}\r\n        thisisCancel={thisisCancel}\r\n        submitSmallText={submitSmallText}\r\n        changeSmallSelect={changeSmallSelect}\r\n      />\r\n      <SaveList\r\n        saverValue={saverValue}\r\n        setsaverValue={setsaverValue}\r\n        saveUpShit={saveUpShit}\r\n        checkAll={checkAll}\r\n        uncheckAll={uncheckAll}\r\n        clearAll={clearAll}\r\n        savesmallText={savesmallText}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Grocery;\r\n"]},"metadata":{},"sourceType":"module"}